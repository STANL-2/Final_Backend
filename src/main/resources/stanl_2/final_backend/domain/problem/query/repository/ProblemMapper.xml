<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "https://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="stanl_2.final_backend.domain.problem.query.repository.ProblemMapper">

    <resultMap id="Problem" type="stanl_2.final_backend.domain.problem.query.dto.ProblemDTO">
        <id property="problemId" column="PROB_ID"/>
        <result property="title" column="PROB_TTL"/>
        <result property="content" column="PROB_CONT"/>
        <result property="createdAt" column="CREATED_AT"/>
        <result property="updatedAt" column="UPDATED_AT"/>
        <result property="deletedAt" column="DELETED_AT"/>
        <result property="active" column="ACTIVE"/>
        <result property="customerId" column="CST_ID"/>
        <result property="memberId" column="MEM_ID"/>
        <result property="productId" column="PROD_ID"/>
        <result property="fileUrl" column="FILE_URL"/>
    </resultMap>

    <resultMap id="SearchProblem" type="stanl_2.final_backend.domain.problem.query.dto.ProblemDTO">
        <id property="problemId" column="PROB_ID"/>
        <result property="title" column="PROB_TTL"/>
        <result property="content" column="PROB_CONT"/>
        <result property="memberId" column="MEM_ID"/>
        <result property="productId" column="PROD_ID"/>
        <result property="customerId" column="CST_ID"/>
        <result property="createdAt" column="CREATED_AT"/>
        <result property="updatedAt" column="UPDATED_AT"/>
        <result property="deletedAt" column="DELETED_AT"/>
    </resultMap>

    <select id="findProblems" resultMap="SearchProblem" parameterType="String">
        SELECT
        a.prob_id,
        a.prob_ttl,
        a.prob_cont,
        a.created_at,
        a.updated_at,
        a.deleted_at,
        a.cst_id,
        a.mem_id,
        a.prod_id,
        a.active
        FROM tb_problem a
        <where>
            a.active != 'false'
            <if test="problemSearchDTO.title != null">
                AND a.prob_ttl LIKE CONCAT('%', #{problemSearchDTO.title}, '%')
            </if>
            <if test="problemSearchDTO.memberId != null">
                AND a.mem_id = #{problemSearchDTO.memberId}
            </if>
            <if test="problemSearchDTO.productId != null">
                AND a.prod_id = #{problemSearchDTO.productId}
            </if>
            <if test="problemSearchDTO.customerId != null">
                AND a.cst_id = #{problemSearchDTO.customerId}
            </if>
            <if test="problemSearchDTO.startDate != null and problemSearchDTO.endDate != null">
                AND a.created_at BETWEEN #{problemSearchDTO.startDate} AND #{problemSearchDTO.endDate}
            </if>
        </where>
        ORDER BY a.created_at DESC
        LIMIT #{size} OFFSET #{offset}
    </select>

    <select id="findProblemsCount" resultType="int" parameterType="stanl_2.final_backend.domain.problem.query.dto.ProblemSearchDTO">
        SELECT
        COUNT(*) AS CNT
        FROM tb_problem a
        <where>
            a.active != 'false'
            <if test="title != null">
                AND a.prob_ttl LIKE CONCAT('%', #{title}, '%')
            </if>
            <if test="memberId != null">
                AND a.mem_id = #{memberId}
            </if>
            <if test="productId != null">
                AND a.prod_id = #{productId}
            </if>
            <if test="customerId != null">
                AND a.cst_id = #{customerId}
            </if>
            <if test="startDate != null and endDate != null">
                AND a.created_at BETWEEN #{startDate} AND #{endDate}
            </if>
        </where>
    </select>

    <select id="findProblem" resultMap="Problem" parameterType="string">
        SELECT
        a.prob_id,
        a.prob_ttl,
        a.prob_cont,
        a.created_at,
        a.updated_at,
        a.deleted_at,
        a.active,
        a.cst_id,
        a.mem_id,
        a.prod_id
        a.file_url
        FROM tb_problem a
        WHERE prob_id = #{problemId};
    </select>

    <resultMap id="ProblemExcel" type="stanl_2.final_backend.domain.problem.query.dto.ProblemExcelDownload">
        <result property="title" column="PROB_TTL"/>
        <result property="content" column="PROB_CONT"/>
        <result property="createdAt" column="CREATED_AT"/>
        <result property="updatedAt" column="UPDATED_AT"/>
        <result property="memberId" column="MEM_ID"/>
        <result property="customerId" column="CST_ID"/>
        <result property="productId" column="PROD_ID"/>
    </resultMap>

    <select id="findProblemsForExcel" resultMap="ProblemExcel">
        SELECT
            a.prob_ttl,
            a.prob_cont,
            a.created_at,
            a.updated_at,
            a.cst_id,
            a.mem_id,
            a.prod_id
        FROM tb_problem a
        where a.active != 'false';
    </select>


</mapper>
