<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "https://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="stanl_2.final_backend.domain.problem.query.repository.ProblemMapper">

    <resultMap id="Problem" type="stanl_2.final_backend.domain.problem.query.dto.ProblemDTO">
        <id property="problemId" column="PROB_ID"/>
        <result property="title" column="PROB_TTL"/>
        <result property="content" column="PROB_CONT"/>
        <result property="createdAt" column="CREATED_AT"/>
        <result property="updatedAt" column="UPDATED_AT"/>
        <result property="deletedAt" column="DELETED_AT"/>
        <result property="active" column="ACTIVE"/>
        <result property="customerId" column="CUST_ID"/>
        <result property="memberId" column="MEM_ID"/>
        <result property="productId" column="PROD_ID"/>
    </resultMap>

    <resultMap id="SearchProblem" type="stanl_2.final_backend.domain.problem.query.dto.ProblemDTO">
        <id property="noticeId" column="NOT_ID"/>
        <result property="title" column="NOT_TTL"/>
        <result property="memberId" column="NOT_TTL"/>
        <result property="productId" column="NOT_TTL"/>
        <result property="customerId" column="NOT_TTL"/>
    </resultMap>


    <select id="findProblems" resultMap="SearchProblem" parameterType="String" >
        SELECT
        A.prob_id,
        A.prob_ttl,
        A.prob_cont,
        A.created_at,
        A.updated_at,
        A.deleted_at,
        A.active,
        A.cust_id,
        A.mem_id,
        A.prod_id
        FROM tb_problem A
        <where>
            a.active != 'false'
            <if test="problemSearchDTO.title != null">
                AND A.NOT_TTL LIKE CONCAT('%', #{searchDTO.title}, '%')
            </if>
            <if test="problemSearchDTO.memberId != null">
                AND A.MEM_ID = #{searchDTO.memberId}
            </if>
            <if test="problemSearchDTO.productId != null">
                AND A.PROD_ID = #{searchDTO.productId}
            </if>
            <if test="problemSearchDTO.customerId != null">
                AND A.CUST_ID = #{searchDTO.customerId}
            </if>
            <if test="problemSearchDTO.startDate != null and searchDTO.endDate != null">
                AND A.CREATED_AT BETWEEN #{searchDTO.startDate} AND #{searchDTO.endDate}
            </if>
        </where>
        ORDER BY A.CREATED_AT DESC
        LIMIT #{size} OFFSET #{offset}
    </select>


    <select id="findNoticesCount" resultMap="SearchNotice" parameterType="String">
        SELECT
        COUNT(*) AS CNT
        FROM tb_problem a
        <where>
            a.active != 'false'
            <if test="problemSearchDTO.title != null">
                AND A.NOT_TTL LIKE CONCAT('%', #{searchDTO.title}, '%')
            </if>
            <if test="problemSearchDTO.memberId != null">
                AND A.MEM_ID = #{searchDTO.memberId}
            </if>
            <if test="problemSearchDTO.productId != null">
                AND A.PROD_ID = #{searchDTO.productId}
            </if>
            <if test="problemSearchDTO.customerId != null">
                AND A.CUST_ID = #{searchDTO.customerId}
            </if>
            <if test="problemSearchDTO.startDate != null and searchDTO.endDate != null">
                AND A.CREATED_AT BETWEEN #{searchDTO.startDate} AND #{searchDTO.endDate}
            </if>
        </where>
    </select>

    <select id="findProblem" resultMap="Problem" parameterType="string">
        SELECT
            A.prob_id,
            A.prob_ttl,
            A.prob_cont,
            A.created_at,
            A.updated_at,
            A.deleted_at,
            A.active,
            A.cust_id,
            A.mem_id,
            A.prod_id
        FROM tb_problem A
        WHERE prob_id = #{problemId};
    </select>

    <select id="findPromotionsCount" resultMap="SearchPromotion" parameterType="String">
        SELECT
        COUNT(*) AS cnt
        FROM tb_problem a
        <where>
            a.active != 'false'
            <if test="problemSearchDTO.title != null">
                AND A.NOT_TTL LIKE CONCAT('%', #{searchDTO.title}, '%')
            </if>
            <if test="problemSearchDTO.memberId != null">
                AND A.MEM_ID = #{searchDTO.memberId}
            </if>
            <if test="problemSearchDTO.productId != null">
                AND A.PROD_ID = #{searchDTO.productId}
            </if>
            <if test="problemSearchDTO.customerId != null">
                AND A.CUST_ID = #{searchDTO.customerId}
            </if>
            <if test="problemSearchDTO.startDate != null and searchDTO.endDate != null">
                AND A.CREATED_AT BETWEEN #{searchDTO.startDate} AND #{searchDTO.endDate}
            </if>
        </where>
    </select>

</mapper>