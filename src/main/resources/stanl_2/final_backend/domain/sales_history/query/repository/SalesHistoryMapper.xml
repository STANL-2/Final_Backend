<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "https://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="stanl_2.final_backend.domain.sales_history.query.repository.SalesHistoryMapper">

    <resultMap id="salesHistoryAllResultMap" type="stanl_2.final_backend.domain.sales_history.query.dto.SalesHistorySelectDTO">
        <id property="salesHistoryId" column="SAL_HIST_ID"/>
        <result property="salesHistoryNumberOfVehicles" column="SAL_HIST_NO_OF_VEH"/>
        <result property="salesHistoryTotalSales" column="SAL_HIST_TOTA_SALE"/>
        <result property="salesHistoryIncentive" column="SAL_HIST_INCE"/>
        <result property="createdAt" column="CREATED_AT"/>
        <result property="contractId" column="CONR_ID"/>
        <result property="customerId" column="CUST_ID"/>
        <result property="productId" column="PROD_ID"/>
        <result property="memberId" column="MEM_ID"/>
        <result property="centerId" column="CENT_ID"/>
    </resultMap>

    <resultMap id="salesHistoryAggregatedDataResultMap" type="stanl_2.final_backend.domain.sales_history.query.dto.SalesHistoryStatisticsDTO">
        <result property="incentive" column="INCENTIVE"/>
        <result property="performance" column="PERFORMANCE"/>
        <result property="totalSales" column="TOTAL_SALES"/>
    </resultMap>

    <select id="findSalesHistoryByEmployee" resultMap="salesHistoryAllResultMap">
        SELECT
        a.sal_hist_id,
        a.sal_hist_ince,
        a.sal_hist_no_of_veh,
        a.sal_hist_tota_sale,
        a.cent_id,
        a.cust_id,
        a.mem_id,
        a.prod_id,
        a.conr_id,
        a.created_at
        FROM tb_sales_history a
        WHERE a.active = TRUE AND a.mem_id = #{searcherId}
        ORDER BY a.created_at DESC
        LIMIT #{size} OFFSET #{offset}
    </select>

 <select id="findAllSalesHistory" resultMap="salesHistoryAllResultMap">
        SELECT
        a.sal_hist_id,
        a.sal_hist_ince,
        a.sal_hist_no_of_veh,
        a.sal_hist_tota_sale,
        a.cent_id,
        a.cust_id,
        a.mem_id,
        a.prod_id,
        a.conr_id,
        a.created_at
        FROM tb_sales_history a
        WHERE a.active = TRUE
        ORDER BY a.created_at DESC
        LIMIT #{size} OFFSET #{offset}
    </select>

    <select id="findSalesHistoryDetail" resultMap="salesHistoryAllResultMap">
        SELECT
        a.sal_hist_id,
        a.sal_hist_ince,
        a.sal_hist_no_of_veh,
        a.sal_hist_tota_sale,
        a.cent_id,
        a.cust_id,
        a.mem_id,
        a.prod_id,
        a.conr_id,
        a.created_at
        FROM tb_sales_history a
        WHERE a.sal_hist_id = #{salesHistorySelectDTO.salesHistoryId} AND a.active = TRUE
    </select>

    <select id="findStatisticsByEmployee" resultMap="salesHistoryAggregatedDataResultMap" parameterType="String">
        SELECT
        SUM(a.sal_hist_ince) as INCENTIVE,
        SUM(a.sal_hist_no_of_veh) as PERFORMANCE,
        SUM(a.sal_hist_tota_sale) as TOTAL_SALES
        FROM tb_sales_history a
        WHERE a.mem_id = #{salesHistorySelectDTO.searcherName} AND a.active = TRUE;
    </select>

    <select id="findStatisticsSearchByEmployee" resultMap="salesHistoryAggregatedDataResultMap" parameterType="String">
        SELECT
        SUM(a.sal_hist_ince) as INCENTIVE,
        SUM(a.sal_hist_no_of_veh) as PERFORMANCE,
        SUM(a.sal_hist_tota_sale) as TOTAL_SALES
        FROM tb_sales_history a
        <where>
            a.mem_id = #{salesHistorySearchDTO.searcherName} AND a.active = TRUE
            <if test="salesHistorySearchDTO.startDate != null and salesHistorySearchDTO.endDate != null">
            AND a.created_at BETWEEN #{salesHistorySearchDTO.startDate} AND #{salesHistorySearchDTO.endDate}
            </if>
        </where>
    </select>

    <select id="findSalesHistoryCountByEmployee" resultType="int" parameterType="String">
        SELECT
        COUNT(*) AS cnt
        FROM tb_sales_history a
        WHERE a.active = TRUE AND a.mem_id = #{searcherId}
        ORDER BY a.created_at DESC
    </select>

    <select id="findSalesHistoryCount" resultType="int">
        SELECT
        COUNT(*) AS cnt
        FROM tb_sales_history a
        WHERE a.active = TRUE;
    </select>

    <select id="findStatisticsSearchMonthByEmployee" resultMap="salesHistoryAggregatedDataResultMap" parameterType="String">
        SELECT
        LEFT(a.created_at, 7) AS MONTH,
        SUM(a.sal_hist_ince) AS INCENTIVE,
        SUM(a.sal_hist_no_of_veh) AS PERFORMANCE,
        SUM(a.sal_hist_tota_sale) AS TOTAL_SALES
        FROM tb_sales_history a
        <where>
            a.mem_id = #{salesHistorySearchDTO.searcherName} AND a.active = TRUE
            <if test="salesHistorySearchDTO.startDate != null and salesHistorySearchDTO.endDate != null">
                AND a.created_at BETWEEN #{salesHistorySearchDTO.startDate} AND #{salesHistorySearchDTO.endDate}
            </if>
        </where>
        GROUP BY LEFT(a.created_at, 7)
        ORDER BY MONTH ASC
    </select>

    <select id="findStatisticsSearchYearByEmployee" resultMap="salesHistoryAggregatedDataResultMap" parameterType="String">
        SELECT
        LEFT(a.created_at, 4) AS YEAR,
        SUM(a.sal_hist_ince) AS INCENTIVE,
        SUM(a.sal_hist_no_of_veh) AS PERFORMANCE,
        SUM(a.sal_hist_tota_sale) AS TOTAL_SALES
        FROM tb_sales_history a
        <where>
            a.mem_id = #{salesHistorySearchDTO.searcherName} AND a.active = TRUE
            <if test="salesHistorySearchDTO.startDate != null and salesHistorySearchDTO.endDate != null">
                AND a.created_at BETWEEN #{salesHistorySearchDTO.startDate} AND #{salesHistorySearchDTO.endDate}
            </if>
        </where>
        GROUP BY LEFT(a.created_at, 4)
        ORDER BY YEAR ASC
    </select>

<!--    <with id="RankedData" >-->
<!--        SELECT-->
<!--        mem_id,-->
<!--        sal_hist_ince,-->
<!--        sal_hist_no_of_veh,-->
<!--        sal_hist_tota_sale,-->
<!--        created_at,-->
<!--        ROW_NUMBER() OVER (PARTITION BY mem_id ORDER BY sal_hist_ince DESC) AS rank_ince,-->
<!--        ROW_NUMBER() OVER (PARTITION BY mem_id ORDER BY sal_hist_no_of_veh DESC) AS rank_perf,-->
<!--        ROW_NUMBER() OVER (PARTITION BY mem_id ORDER BY sal_hist_tota_sale DESC) AS rank_sales-->
<!--        FROM tb_sales_history-->
<!--        WHERE active = TRUE-->
<!--        AND mem_id IN-->
<!--        <foreach collection="memIdList" item="memId" open="(" separator="," close=")">-->
<!--            #{memId}-->
<!--        </foreach>-->
<!--    </with>-->


<!--    <select id="findMaxSalesByMembers" resultType="YourResultType">-->
<!--        SELECT-->
<!--        mem_id,-->
<!--        sal_hist_ince AS MAX_INCENTIVE,-->
<!--        sal_hist_no_of_veh AS MAX_PERFORMANCE,-->
<!--        sal_hist_tota_sale AS MAX_TOTAL_SALES,-->
<!--        created_at-->
<!--        FROM RankedData-->
<!--        WHERE rank_ince = 1 OR rank_perf = 1 OR rank_sales = 1;-->
<!--    </select>-->
</mapper>
