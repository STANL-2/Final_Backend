<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "https://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="stanl_2.final_backend.domain.sales_history.query.repository.SalesHistoryMapper">

    <resultMap id="salesHistoryAllResultMap" type="stanl_2.final_backend.domain.sales_history.query.dto.SalesHistorySelectDTO">
        <id property="salesHistoryId" column="SAL_HIST_ID"/>
        <result property="salesHistoryNumberOfVehicles" column="SAL_HIST_NO_OF_VEH"/>
        <result property="salesHistoryTotalSales" column="SAL_HIST_TOTA_SALE"/>
        <result property="salesHistoryIncentive" column="SAL_HIST_INCE"/>
        <result property="createdAt" column="CREATED_AT"/>
        <result property="contractId" column="CONR_ID"/>
        <result property="customerId" column="CUST_ID"/>
        <result property="productId" column="PROD_ID"/>
        <result property="memberId" column="MEM_ID"/>
        <result property="centerId" column="CENT_ID"/>
    </resultMap>

    <resultMap id="salesHistoryAggregatedDataResultMap" type="stanl_2.final_backend.domain.sales_history.query.dto.SalesHistoryStatisticsDTO">
        <result property="incentive" column="INCENTIVE"/>
        <result property="performance" column="PERFORMANCE"/>
        <result property="totalSales" column="TOTAL_SALES"/>
    </resultMap>

    <resultMap id="SalesHistoryRankedDataResultMap" type="stanl_2.final_backend.domain.sales_history.query.dto.SalesHistoryRankedDataDTO">
        <result property="memberId" column="MEM_ID"/>
        <result property="centerId" column="CENT_ID"/>
        <result property="totalIncentive" column="TOTAL_INCENTIVE"/>
        <result property="totalPerformance" column="TOTAL_PERFORMANCE"/>
        <result property="totalSales" column="TOTAL_SALES"/>
        <result property="createdAt" column="CREATED_AT"/>
        <result property="year" column="YEAR"/>
        <result property="month" column="MONTH"/>
    </resultMap>

    <resultMap id="SalesHistoryRankedDataCenterResultMap" type="stanl_2.final_backend.domain.sales_history.query.dto.SalesHistoryRankedDataDTO">
        <result property="centerId" column="CENT_ID"/>
        <result property="totalIncentive" column="TOTAL_INCENTIVE"/>
        <result property="totalPerformance" column="TOTAL_PERFORMANCE"/>
        <result property="totalSales" column="TOTAL_SALES"/>
        <result property="createdAt" column="CREATED_AT"/>
        <result property="year" column="YEAR"/>
        <result property="month" column="MONTH"/>
    </resultMap>

    <resultMap id="SalesHistoryAverageResultMap" type="stanl_2.final_backend.domain.sales_history.query.dto.SalesHistoryStatisticsAverageDTO">
        <result property="averageTotalSales" column="average_total_sales"/>
        <result property="averageTotalIncentive" column="average_total_incentive"/>
        <result property="averageTotalPerformance" column="average_total_performance"/>
    </resultMap>


    <select id="findSalesHistoryByEmployee" resultMap="salesHistoryAllResultMap">
        SELECT
        a.sal_hist_id,
        a.sal_hist_ince,
        a.sal_hist_no_of_veh,
        a.sal_hist_tota_sale,
        a.cent_id,
        a.cust_id,
        a.mem_id,
        a.prod_id,
        a.conr_id,
        a.created_at
        FROM tb_sales_history a
        WHERE a.active = TRUE AND a.mem_id = #{searcherId}
        ORDER BY a.created_at DESC
        LIMIT #{size} OFFSET #{offset}
    </select>

    <select id="findSalesHistorySearchByEmployee" resultMap="salesHistoryAllResultMap">
        SELECT
        a.sal_hist_id,
        a.sal_hist_ince,
        a.sal_hist_no_of_veh,
        a.sal_hist_tota_sale,
        a.cent_id,
        a.cust_id,
        a.mem_id,
        a.prod_id,
        a.conr_id,
        a.created_at
        FROM tb_sales_history a
        <where>
            a.mem_id = #{salesHistorySearchDTO.searcherName} AND a.active = TRUE
            <if test="salesHistorySearchDTO.startDate != null and salesHistorySearchDTO.endDate != null">
                AND a.created_at BETWEEN #{salesHistorySearchDTO.startDate} AND #{salesHistorySearchDTO.endDate}
            </if>
        </where>
        ORDER BY a.created_at DESC
        LIMIT #{size} OFFSET #{offset}
    </select>

    <select id="findSalesHistorySearchCountByEmployee" resultType="int" parameterType="String">
        SELECT
        COUNT(*) AS cnt
        FROM tb_sales_history a
        <where>
            a.mem_id = #{salesHistorySearchDTO.searcherName} AND a.active = TRUE
            <if test="salesHistorySearchDTO.startDate != null and salesHistorySearchDTO.endDate != null">
                AND a.created_at BETWEEN #{salesHistorySearchDTO.startDate} AND #{salesHistorySearchDTO.endDate}
            </if>
        </where>
        ORDER BY a.created_at DESC
    </select>

    <select id="findSalesHistoryBySearch" resultMap="salesHistoryAllResultMap">
        SELECT
        a.sal_hist_id,
        a.sal_hist_ince,
        a.sal_hist_no_of_veh,
        a.sal_hist_tota_sale,
        a.cent_id,
        a.cust_id,
        a.mem_id,
        a.prod_id,
        a.conr_id,
        a.created_at
        FROM tb_sales_history a
        <where>
            <if test="salesHistorySearchDTO.memberList != null and salesHistorySearchDTO.memberList.size() > 0">
                a.mem_id IN
                <foreach collection="salesHistorySearchDTO.memberList" item="mem_id" open="(" separator="," close=")">
                    #{mem_id}
                </foreach>
            </if>
            <if test="salesHistorySearchDTO.centerList != null and salesHistorySearchDTO.centerList.size() > 0">
                a.cent_id IN
                <foreach collection="salesHistorySearchDTO.centerList" item="cent_id" open="(" separator="," close=")">
                    #{cent_id}
                </foreach>
            </if>
            <if test="salesHistorySearchDTO.startDate != null and salesHistorySearchDTO.endDate != null">
                AND a.created_at BETWEEN #{salesHistorySearchDTO.startDate} AND #{salesHistorySearchDTO.endDate}
            </if>
            AND a.active = TRUE
        </where>
        ORDER BY a.created_at desc
        LIMIT #{size} OFFSET #{offset}
    </select>

    <select id="findSalesHistoryCountBySearch" resultType="int" parameterType="String">
        SELECT
        COUNT(*) AS cnt
        FROM tb_sales_history a
        <where>
            <if test="salesHistorySearchDTO.memberList != null and salesHistorySearchDTO.memberList.size() > 0">
                a.mem_id IN
                <foreach collection="salesHistorySearchDTO.memberList" item="mem_id" open="(" separator="," close=")">
                    #{mem_id}
                </foreach>
            </if>
            <if test="salesHistorySearchDTO.centerList != null and salesHistorySearchDTO.centerList.size() > 0">
                a.cent_id IN
                <foreach collection="salesHistorySearchDTO.centerList" item="cent_id" open="(" separator="," close=")">
                    #{cent_id}
                </foreach>
            </if>
            <if test="salesHistorySearchDTO.startDate != null and salesHistorySearchDTO.endDate != null">
                AND a.created_at BETWEEN #{salesHistorySearchDTO.startDate} AND #{salesHistorySearchDTO.endDate}
            </if>
            AND a.active = TRUE
        </where>
    </select>

 <select id="findAllSalesHistory" resultMap="salesHistoryAllResultMap">
        SELECT
        a.sal_hist_id,
        a.sal_hist_ince,
        a.sal_hist_no_of_veh,
        a.sal_hist_tota_sale,
        a.cent_id,
        a.cust_id,
        a.mem_id,
        a.prod_id,
        a.conr_id,
        a.created_at
        FROM tb_sales_history a
        WHERE a.active = TRUE
        ORDER BY a.created_at DESC
        LIMIT #{size} OFFSET #{offset}
    </select>

    <select id="findSalesHistoryDetail" resultMap="salesHistoryAllResultMap">
        SELECT
        a.sal_hist_id,
        a.sal_hist_ince,
        a.sal_hist_no_of_veh,
        a.sal_hist_tota_sale,
        a.cent_id,
        a.cust_id,
        a.mem_id,
        a.prod_id,
        a.conr_id,
        a.created_at
        FROM tb_sales_history a
        WHERE a.sal_hist_id = #{salesHistorySelectDTO.salesHistoryId} AND a.active = TRUE
    </select>

    <select id="findStatisticsByEmployee" resultMap="salesHistoryAggregatedDataResultMap" parameterType="String">
        SELECT
        SUM(a.sal_hist_ince) as INCENTIVE,
        SUM(a.sal_hist_no_of_veh) as PERFORMANCE,
        SUM(a.sal_hist_tota_sale) as TOTAL_SALES
        FROM tb_sales_history a
        WHERE a.mem_id = #{salesHistorySelectDTO.searcherName} AND a.active = TRUE;
    </select>

    <select id="findStatisticsSearchByEmployee" resultMap="salesHistoryAggregatedDataResultMap" parameterType="String">
        SELECT
        SUM(a.sal_hist_ince) as INCENTIVE,
        SUM(a.sal_hist_no_of_veh) as PERFORMANCE,
        SUM(a.sal_hist_tota_sale) as TOTAL_SALES
        FROM tb_sales_history a
        <where>
            a.mem_id = #{salesHistorySearchDTO.searcherName} AND a.active = TRUE
            <if test="salesHistorySearchDTO.startDate != null and salesHistorySearchDTO.endDate != null">
            AND a.created_at BETWEEN #{salesHistorySearchDTO.startDate} AND #{salesHistorySearchDTO.endDate}
            </if>
        </where>
    </select>

    <select id="findSalesHistoryCountByEmployee" resultType="int" parameterType="String">
        SELECT
        COUNT(*) AS cnt
        FROM tb_sales_history a
        WHERE a.active = TRUE AND a.mem_id = #{searcherId}
        ORDER BY a.created_at DESC
    </select>

    <select id="findSalesHistoryCount" resultType="int">
        SELECT
        COUNT(*) AS cnt
        FROM tb_sales_history a
        WHERE a.active = TRUE;
    </select>

    <select id="findStatisticsSearchMonthByEmployee" resultMap="salesHistoryAggregatedDataResultMap" parameterType="String">
        SELECT
        LEFT(a.created_at, 7) AS MONTH,
        SUM(a.sal_hist_ince) AS INCENTIVE,
        SUM(a.sal_hist_no_of_veh) AS PERFORMANCE,
        SUM(a.sal_hist_tota_sale) AS TOTAL_SALES
        FROM tb_sales_history a
        <where>
            a.mem_id = #{salesHistorySearchDTO.searcherName} AND a.active = TRUE
            <if test="salesHistorySearchDTO.startDate != null and salesHistorySearchDTO.endDate != null">
                AND a.created_at BETWEEN #{salesHistorySearchDTO.startDate} AND #{salesHistorySearchDTO.endDate}
            </if>
        </where>
        GROUP BY LEFT(a.created_at, 7)
        <choose>
            <when test="salesHistorySearchDTO.orderBy == 'totalIncentive'">
                ORDER BY INCENTIVE DESC
            </when>
            <when test="salesHistorySearchDTO.orderBy == 'totalPerformance'">
                ORDER BY PERFORMANCE DESC
            </when>
            <when test="salesHistorySearchDTO.orderBy == 'totalSales'">
                ORDER BY TOTAL_SALES DESC
            </when>
            <otherwise>
                ORDER BY MONTH ASC
            </otherwise>
        </choose>
    </select>

    <select id="findStatisticsSearchYearByEmployee" resultMap="salesHistoryAggregatedDataResultMap" parameterType="String">
        SELECT
        LEFT(a.created_at, 4) AS YEAR,
        SUM(a.sal_hist_ince) AS INCENTIVE,
        SUM(a.sal_hist_no_of_veh) AS PERFORMANCE,
        SUM(a.sal_hist_tota_sale) AS TOTAL_SALES
        FROM tb_sales_history a
        <where>
            a.mem_id = #{salesHistorySearchDTO.searcherName} AND a.active = TRUE
            <if test="salesHistorySearchDTO.startDate != null and salesHistorySearchDTO.endDate != null">
                AND a.created_at BETWEEN #{salesHistorySearchDTO.startDate} AND #{salesHistorySearchDTO.endDate}
            </if>
        </where>
        GROUP BY LEFT(a.created_at, 4)
        <choose>
            <when test="salesHistorySearchDTO.orderBy == 'totalIncentive'">
                ORDER BY total_incentive DESC
            </when>
            <when test="salesHistorySearchDTO.orderBy == 'totalPerformance'">
                ORDER BY total_performance DESC
            </when>
            <when test="salesHistorySearchDTO.orderBy == 'totalSales'">
                ORDER BY total_sales DESC
            </when>
            <otherwise>
                ORDER BY YEAR ASC
            </otherwise>
        </choose>
    </select>

    <select id="findAllRank" resultMap="SalesHistoryRankedDataResultMap">
        SELECT
        mem_id,
        SUM(sal_hist_ince) AS total_incentive,
        SUM(sal_hist_no_of_veh) AS total_performance,
        SUM(sal_hist_tota_sale) AS total_sales,
        created_at
        FROM tb_sales_history
        WHERE active = TRUE
        GROUP BY mem_id
        <choose>
            <when test="salesHistoryRankedDataDTO.orderBy == 'totalIncentive'">
                ORDER BY total_incentive DESC
            </when>
            <when test="salesHistoryRankedDataDTO.orderBy == 'totalPerformance'">
                ORDER BY total_performance DESC
            </when>
            <when test="salesHistoryRankedDataDTO.orderBy == 'totalSales'">
                ORDER BY total_sales DESC
            </when>
            <otherwise>
                ORDER BY created_at desc
            </otherwise>
        </choose>
        LIMIT #{size} OFFSET #{offset}
    </select>

    <select id="findRankCount" resultType="int">
    SELECT
        COUNT(*) AS rank_count
    FROM(
        SELECT
         COUNT(*)
          FROM tb_sales_history
         WHERE active = TRUE
         GROUP BY MEM_ID) AS A
    </select>

    <select id="findStatisticsBySearch" resultMap="SalesHistoryRankedDataResultMap">
        SELECT
        a.mem_id,
        SUM(a.sal_hist_ince) AS total_incentive,
        SUM(a.sal_hist_no_of_veh) AS total_performance,
        SUM(a.sal_hist_tota_sale) AS total_sales
        FROM tb_sales_history a
        <where>
            <if test="salesHistoryRankedDataDTO.memberList != null and salesHistoryRankedDataDTO.memberList.size() > 0">
                a.mem_id IN
                <foreach collection="salesHistoryRankedDataDTO.memberList" item="mem_id" open="(" separator="," close=")">
                    #{mem_id}
                </foreach>
            </if>
            <if test="salesHistoryRankedDataDTO.startDate != null and salesHistoryRankedDataDTO.endDate != null">
                AND a.created_at BETWEEN #{salesHistoryRankedDataDTO.startDate} AND #{salesHistoryRankedDataDTO.endDate}
            </if>
            AND a.active = TRUE
        </where>
        GROUP BY a.mem_id
        <choose>
            <when test="salesHistoryRankedDataDTO.orderBy == 'totalIncentive'">
                ORDER BY total_incentive DESC
            </when>
            <when test="salesHistoryRankedDataDTO.orderBy == 'totalPerformance'">
                ORDER BY total_performance DESC
            </when>
            <when test="salesHistoryRankedDataDTO.orderBy == 'totalSales'">
                ORDER BY total_sales DESC
            </when>
            <otherwise>
                ORDER BY a.created_at desc
            </otherwise>
        </choose>
        LIMIT #{size} OFFSET #{offset}
    </select>

    <select id="findStatisticsAverageBySearch" resultMap="SalesHistoryAverageResultMap">
        SELECT
        AVG(total_incentive) AS average_total_incentive,
        AVG(total_performance) AS average_total_performance,
        AVG(total_sales) AS average_total_sales
        FROM (
        SELECT
        SUM(a.sal_hist_ince) AS total_incentive,
        SUM(a.sal_hist_no_of_veh) AS total_performance,
        SUM(a.sal_hist_tota_sale) AS total_sales
        FROM tb_sales_history a
        <where>
            <if test="salesHistoryRankedDataDTO.startDate != null and salesHistoryRankedDataDTO.endDate != null">
                AND a.created_at BETWEEN #{salesHistoryRankedDataDTO.startDate} AND #{salesHistoryRankedDataDTO.endDate}
            </if>
            AND a.active = TRUE
        </where>
        <choose>
            <when test="salesHistoryRankedDataDTO.groupBy == 'employee'">
                GROUP BY a.mem_id
            </when>
            <otherwise>
                GROUP BY a.cent_id
            </otherwise>
        </choose>
        ) AS summary
    </select>

    <select id="findStatisticsBySearchCount" resultType="int">
        SELECT
        COUNT(*) AS rank_count
        FROM(
        SELECT
        COUNT(*)
        FROM tb_sales_history a
        <where>
            <if test="salesHistoryRankedDataDTO.memberList != null and salesHistoryRankedDataDTO.memberList.size() > 0">
                a.mem_id IN
                <foreach collection="salesHistoryRankedDataDTO.memberList" item="mem_id" open="(" separator="," close=")">
                    #{mem_id}
                </foreach>
            </if>
            <if test="salesHistoryRankedDataDTO.startDate != null and salesHistoryRankedDataDTO.endDate != null">
                AND a.created_at BETWEEN #{salesHistoryRankedDataDTO.startDate} AND #{salesHistoryRankedDataDTO.endDate}
            </if>
            AND a.active = TRUE
        </where>
        GROUP BY a.mem_id) AS A
    </select>

    <select id="findStatisticsBySearchMonth" resultMap="SalesHistoryRankedDataResultMap">
        SELECT
        a.mem_id,
        SUM(a.sal_hist_ince) AS total_incentive,
        SUM(a.sal_hist_no_of_veh) AS total_performance,
        SUM(a.sal_hist_tota_sale) AS total_sales,
        LEFT(a.created_at, 7) AS MONTH
        FROM tb_sales_history a
        <where>
            <if test="salesHistoryRankedDataDTO.memberList != null and salesHistoryRankedDataDTO.memberList.size() > 0">
                a.mem_id IN
                <foreach collection="salesHistoryRankedDataDTO.memberList" item="mem_id" open="(" separator="," close=")">
                    #{mem_id}
                </foreach>
            </if>
            <if test="salesHistoryRankedDataDTO.startDate != null and salesHistoryRankedDataDTO.endDate != null">
                AND a.created_at BETWEEN #{salesHistoryRankedDataDTO.startDate} AND #{salesHistoryRankedDataDTO.endDate}
            </if>
            AND a.active = TRUE
        </where>
        GROUP BY a.mem_id, LEFT(a.created_at, 7)
        <choose>
            <when test="salesHistoryRankedDataDTO.orderBy == 'totalIncentive'">
                ORDER BY total_incentive DESC
            </when>
            <when test="salesHistoryRankedDataDTO.orderBy == 'totalPerformance'">
                ORDER BY total_performance DESC
            </when>
            <when test="salesHistoryRankedDataDTO.orderBy == 'totalSales'">
                ORDER BY total_sales DESC
            </when>
            <otherwise>
                ORDER BY MONTH ASC
            </otherwise>
        </choose>
        LIMIT #{size} OFFSET #{offset}
    </select>

    <select id="findStatisticsBySearchCountMonth" resultType="int">
        SELECT
        COUNT(*) AS rank_count
        FROM(
        SELECT
        COUNT(*)
        FROM tb_sales_history a
        <where>
            <if test="salesHistoryRankedDataDTO.memberList != null and salesHistoryRankedDataDTO.memberList.size() > 0">
                a.mem_id IN
                <foreach collection="salesHistoryRankedDataDTO.memberList" item="mem_id" open="(" separator="," close=")">
                    #{mem_id}
                </foreach>
            </if>
            <if test="salesHistoryRankedDataDTO.startDate != null and salesHistoryRankedDataDTO.endDate != null">
                AND a.created_at BETWEEN #{salesHistoryRankedDataDTO.startDate} AND #{salesHistoryRankedDataDTO.endDate}
            </if>
            AND a.active = TRUE
        </where>
        GROUP BY a.mem_id, LEFT(a.created_at, 7)) AS A
    </select>

    <select id="findStatisticsBySearchYear" resultMap="SalesHistoryRankedDataResultMap">
        SELECT
        LEFT(a.created_at, 4) AS YEAR,
        a.mem_id,
        SUM(a.sal_hist_ince) AS total_incentive,
        SUM(a.sal_hist_no_of_veh) AS total_performance,
        SUM(a.sal_hist_tota_sale) AS total_sales
        FROM tb_sales_history a
        <where>
            <if test="salesHistoryRankedDataDTO.memberList != null and salesHistoryRankedDataDTO.memberList.size() > 0">
                a.mem_id IN
                <foreach collection="salesHistoryRankedDataDTO.memberList" item="mem_id" open="(" separator="," close=")">
                    #{mem_id}
                </foreach>
            </if>
            <if test="salesHistoryRankedDataDTO.startDate != null and salesHistoryRankedDataDTO.endDate != null">
                AND a.created_at BETWEEN #{salesHistoryRankedDataDTO.startDate} AND #{salesHistoryRankedDataDTO.endDate}
            </if>
            AND a.active = TRUE
        </where>
        GROUP BY a.mem_id, LEFT(a.created_at, 4)
        <choose>
            <when test="salesHistoryRankedDataDTO.orderBy == 'totalIncentive'">
                ORDER BY total_incentive DESC
            </when>
            <when test="salesHistoryRankedDataDTO.orderBy == 'totalPerformance'">
                ORDER BY total_performance DESC
            </when>
            <when test="salesHistoryRankedDataDTO.orderBy == 'totalSales'">
                ORDER BY total_sales DESC
            </when>
            <otherwise>
                ORDER BY YEAR ASC
            </otherwise>
        </choose>
        LIMIT #{size} OFFSET #{offset}
    </select>

    <select id="findStatisticsBySearchCountYear" resultType="int">
        SELECT
        COUNT(*) AS rank_count
        FROM(
        SELECT
        COUNT(*)
        FROM tb_sales_history a
        <where>
            <if test="salesHistoryRankedDataDTO.memberList != null and salesHistoryRankedDataDTO.memberList.size() > 0">
                a.mem_id IN
                <foreach collection="salesHistoryRankedDataDTO.memberList" item="mem_id" open="(" separator="," close=")">
                    #{mem_id}
                </foreach>
            </if>
            <if test="salesHistoryRankedDataDTO.startDate != null and salesHistoryRankedDataDTO.endDate != null">
                AND a.created_at BETWEEN #{salesHistoryRankedDataDTO.startDate} AND #{salesHistoryRankedDataDTO.endDate}
            </if>
            AND a.active = TRUE
        </where>
        GROUP BY a.mem_id, LEFT(a.created_at, 4)) AS A
    </select>


    <select id="findStatisticsCenterBySearch" resultMap="SalesHistoryRankedDataCenterResultMap">
        SELECT
        a.cent_id,
        SUM(a.sal_hist_ince) AS total_incentive,
        SUM(a.sal_hist_no_of_veh) AS total_performance,
        SUM(a.sal_hist_tota_sale) AS total_sales
        FROM tb_sales_history a
        <where>
            <if test="salesHistoryRankedDataDTO.centerList != null and salesHistoryRankedDataDTO.centerList.size() > 0">
                a.cent_id IN
                <foreach collection="salesHistoryRankedDataDTO.centerList" item="cent_id" open="(" separator="," close=")">
                    #{cent_id}
                </foreach>
            </if>
            <if test="salesHistoryRankedDataDTO.startDate != null and salesHistoryRankedDataDTO.endDate != null">
                AND a.created_at BETWEEN #{salesHistoryRankedDataDTO.startDate} AND #{salesHistoryRankedDataDTO.endDate}
            </if>
            AND a.active = TRUE
        </where>
        GROUP BY a.cent_id
        <choose>
            <when test="salesHistoryRankedDataDTO.orderBy == 'totalIncentive'">
                ORDER BY total_incentive DESC
            </when>
            <when test="salesHistoryRankedDataDTO.orderBy == 'totalPerformance'">
                ORDER BY total_performance DESC
            </when>
            <when test="salesHistoryRankedDataDTO.orderBy == 'totalSales'">
                ORDER BY total_sales DESC
            </when>
            <otherwise>
                ORDER BY a.created_at DESC
            </otherwise>
        </choose>
        LIMIT #{size} OFFSET #{offset}
    </select>

    <select id="findStatisticsCenterBySearchCount" resultType="int">
        SELECT
        COUNT(*) AS rank_count
        FROM(
        SELECT
        COUNT(*)
        FROM tb_sales_history a
        <where>
            <if test="salesHistoryRankedDataDTO.centerList != null and salesHistoryRankedDataDTO.centerList.size() > 0">
                a.cent_id IN
                <foreach collection="salesHistoryRankedDataDTO.centerList" item="cent_id" open="(" separator="," close=")">
                    #{cent_id}
                </foreach>
            </if>
            <if test="salesHistoryRankedDataDTO.startDate != null and salesHistoryRankedDataDTO.endDate != null">
                AND a.created_at BETWEEN #{salesHistoryRankedDataDTO.startDate} AND #{salesHistoryRankedDataDTO.endDate}
            </if>
            AND a.active = TRUE
        </where>
        GROUP BY a.cent_id) AS A
    </select>

<select id="findStatisticsCenterBySearchMonth" resultMap="SalesHistoryRankedDataCenterResultMap">
        SELECT
        a.cent_id,
        SUM(a.sal_hist_ince) AS total_incentive,
        SUM(a.sal_hist_no_of_veh) AS total_performance,
        SUM(a.sal_hist_tota_sale) AS total_sales,
        LEFT(a.created_at, 7) AS MONTH
        FROM tb_sales_history a
        <where>
            <if test="salesHistoryRankedDataDTO.centerList != null and salesHistoryRankedDataDTO.centerList.size() > 0">
                a.cent_id IN
                <foreach collection="salesHistoryRankedDataDTO.centerList" item="cent_id" open="(" separator="," close=")">
                    #{cent_id}
                </foreach>
            </if>
            <if test="salesHistoryRankedDataDTO.startDate != null and salesHistoryRankedDataDTO.endDate != null">
                AND a.created_at BETWEEN #{salesHistoryRankedDataDTO.startDate} AND #{salesHistoryRankedDataDTO.endDate}
            </if>
            AND a.active = TRUE
        </where>
        GROUP BY a.cent_id, LEFT(a.created_at, 7)
    <choose>
        <when test="salesHistoryRankedDataDTO.orderBy == 'totalIncentive'">
            ORDER BY total_incentive DESC
        </when>
        <when test="salesHistoryRankedDataDTO.orderBy == 'totalPerformance'">
            ORDER BY total_performance DESC
        </when>
        <when test="salesHistoryRankedDataDTO.orderBy == 'totalSales'">
            ORDER BY total_sales DESC
        </when>
        <otherwise>
            ORDER BY MONTH ASC
        </otherwise>
    </choose>
        LIMIT #{size} OFFSET #{offset}
    </select>

    <select id="findStatisticsCenterBySearchCountMonth" resultType="int">
        SELECT
        COUNT(*) AS rank_count
        FROM(
        SELECT
        COUNT(*)
        FROM tb_sales_history a
        <where>
            <if test="salesHistoryRankedDataDTO.centerList != null and salesHistoryRankedDataDTO.centerList.size() > 0">
                a.cent_id IN
                <foreach collection="salesHistoryRankedDataDTO.centerList" item="cent_id" open="(" separator="," close=")">
                    #{cent_id}
                </foreach>
            </if>
            <if test="salesHistoryRankedDataDTO.startDate != null and salesHistoryRankedDataDTO.endDate != null">
                AND a.created_at BETWEEN #{salesHistoryRankedDataDTO.startDate} AND #{salesHistoryRankedDataDTO.endDate}
            </if>
            AND a.active = TRUE
        </where>
        GROUP BY a.cent_id, LEFT(a.created_at, 7)) AS A
    </select>

    <select id="findStatisticsCenterBySearchYear" resultMap="SalesHistoryRankedDataCenterResultMap">
        SELECT
        LEFT(a.created_at, 4) AS YEAR,
        a.cent_id,
        SUM(a.sal_hist_ince) AS total_incentive,
        SUM(a.sal_hist_no_of_veh) AS total_performance,
        SUM(a.sal_hist_tota_sale) AS total_sales
        FROM tb_sales_history a
        <where>
            <if test="salesHistoryRankedDataDTO.centerList != null and salesHistoryRankedDataDTO.centerList.size() > 0">
                a.cent_id IN
                <foreach collection="salesHistoryRankedDataDTO.centerList" item="cent_id" open="(" separator="," close=")">
                    #{cent_id}
                </foreach>
            </if>
            <if test="salesHistoryRankedDataDTO.startDate != null and salesHistoryRankedDataDTO.endDate != null">
                AND a.created_at BETWEEN #{salesHistoryRankedDataDTO.startDate} AND #{salesHistoryRankedDataDTO.endDate}
            </if>
            AND a.active = TRUE
        </where>
        GROUP BY a.cent_id, LEFT(a.created_at, 4)
        <choose>
            <when test="salesHistoryRankedDataDTO.orderBy == 'totalIncentive'">
                ORDER BY total_incentive DESC
            </when>
            <when test="salesHistoryRankedDataDTO.orderBy == 'totalPerformance'">
                ORDER BY total_performance DESC
            </when>
            <when test="salesHistoryRankedDataDTO.orderBy == 'totalSales'">
                ORDER BY total_sales DESC
            </when>
            <otherwise>
                ORDER BY YEAR ASC
            </otherwise>
        </choose>
        LIMIT #{size} OFFSET #{offset}
    </select>

    <select id="findStatisticsCenterBySearchCountYear" resultType="int">
        SELECT
        COUNT(*) AS rank_count
        FROM(
        SELECT
        COUNT(*)
        FROM tb_sales_history a
        <where>
            <if test="salesHistoryRankedDataDTO.memberList != null and salesHistoryRankedDataDTO.memberList.size() > 0">
                a.mem_id IN
                <foreach collection="salesHistoryRankedDataDTO.memberList" item="mem_id" open="(" separator="," close=")">
                    #{mem_id}
                </foreach>
            </if>
            <if test="salesHistoryRankedDataDTO.startDate != null and salesHistoryRankedDataDTO.endDate != null">
                AND a.created_at BETWEEN #{salesHistoryRankedDataDTO.startDate} AND #{salesHistoryRankedDataDTO.endDate}
            </if>
            AND a.active = TRUE
        </where>
        GROUP BY a.mem_id, LEFT(a.created_at, 4)) AS A
    </select>


</mapper>
