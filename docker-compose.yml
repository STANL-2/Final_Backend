version: '3.8'

services:
  backend:
    env_file:
      - .env
    build:
      context: .
      dockerfile: Dockerfile
    container_name: backend
    environment:
      - SPRING_PROFILES_ACTIVE=prod
      - REDIS_HOST=redis
      - REDIS_PORT=6379
      - ALGORITHM=AES
      - TRANSFORMATION=AES/GCM/NoPadding
    expose:
      - "8080"
    depends_on:
      redis:
        condition: service_healthy
    networks:
      - app-network
    restart: always
    entrypoint: [ "sh", "-c", "sleep 10 && java -jar app.jar" ]

  redis:
    image: redis:7.0-alpine
    container_name: redis
    ports:
      - "6379:6379"
    networks:
      - app-network
    volumes:
      - redis-data:/data
    restart: always
    healthcheck:
      test: ["CMD", "redis-cli", "-h", "localhost", "ping"]
      interval: 5s
      timeout: 5s
      retries: 5


  nginx:
    build:
      context: ./nginx
      dockerfile: Dockerfile
    container_name: nginx
    depends_on:
      - backend
    ports:
      - "80:80"
    networks:
      - app-network
    restart: always
    entrypoint: ["sh", "-c", "sleep 30 && nginx -g 'daemon off;'"]

networks:
  app-network:
    driver: bridge

volumes:
  redis-data:
    driver: local